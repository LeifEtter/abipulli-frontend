/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as OnboardingRouteImport } from './routes/onboarding/route'
import { Route as AuthRouteImport } from './routes/_auth/route'
import { Route as AdminRouteImport } from './routes/_admin/route'
import { Route as IndexImport } from './routes/index'
import { Route as OnboardingSchuleImport } from './routes/onboarding/schule'
import { Route as OnboardingPersonalImport } from './routes/onboarding/personal'
import { Route as AuthOrdersImport } from './routes/_auth/orders'
import { Route as AuthDesignerImport } from './routes/_auth/designer'
import { Route as AuthAccountImport } from './routes/_auth/account'
import { Route as AuthGenerateOrderIdImport } from './routes/_auth/generate.$orderId'
import { Route as AuthDesignerOldOrderIdImport } from './routes/_auth/designerOld.$orderId'
import { Route as AdminAdminOrdersImport } from './routes/_admin/admin.orders'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingRouteRoute = OnboardingRouteImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AdminRouteRoute = AdminRouteImport.update({
  id: '/_admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const OnboardingSchuleRoute = OnboardingSchuleImport.update({
  id: '/schule',
  path: '/schule',
  getParentRoute: () => OnboardingRouteRoute,
} as any)

const OnboardingPersonalRoute = OnboardingPersonalImport.update({
  id: '/personal',
  path: '/personal',
  getParentRoute: () => OnboardingRouteRoute,
} as any)

const AuthOrdersRoute = AuthOrdersImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthDesignerRoute = AuthDesignerImport.update({
  id: '/designer',
  path: '/designer',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthAccountRoute = AuthAccountImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthGenerateOrderIdRoute = AuthGenerateOrderIdImport.update({
  id: '/generate/$orderId',
  path: '/generate/$orderId',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthDesignerOldOrderIdRoute = AuthDesignerOldOrderIdImport.update({
  id: '/designerOld/$orderId',
  path: '/designerOld/$orderId',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AdminAdminOrdersRoute = AdminAdminOrdersImport.update({
  id: '/admin/orders',
  path: '/admin/orders',
  getParentRoute: () => AdminRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_admin': {
      id: '/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingRouteImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/account': {
      id: '/_auth/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AuthAccountImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/designer': {
      id: '/_auth/designer'
      path: '/designer'
      fullPath: '/designer'
      preLoaderRoute: typeof AuthDesignerImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/orders': {
      id: '/_auth/orders'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof AuthOrdersImport
      parentRoute: typeof AuthRouteImport
    }
    '/onboarding/personal': {
      id: '/onboarding/personal'
      path: '/personal'
      fullPath: '/onboarding/personal'
      preLoaderRoute: typeof OnboardingPersonalImport
      parentRoute: typeof OnboardingRouteImport
    }
    '/onboarding/schule': {
      id: '/onboarding/schule'
      path: '/schule'
      fullPath: '/onboarding/schule'
      preLoaderRoute: typeof OnboardingSchuleImport
      parentRoute: typeof OnboardingRouteImport
    }
    '/_admin/admin/orders': {
      id: '/_admin/admin/orders'
      path: '/admin/orders'
      fullPath: '/admin/orders'
      preLoaderRoute: typeof AdminAdminOrdersImport
      parentRoute: typeof AdminRouteImport
    }
    '/_auth/designerOld/$orderId': {
      id: '/_auth/designerOld/$orderId'
      path: '/designerOld/$orderId'
      fullPath: '/designerOld/$orderId'
      preLoaderRoute: typeof AuthDesignerOldOrderIdImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/generate/$orderId': {
      id: '/_auth/generate/$orderId'
      path: '/generate/$orderId'
      fullPath: '/generate/$orderId'
      preLoaderRoute: typeof AuthGenerateOrderIdImport
      parentRoute: typeof AuthRouteImport
    }
  }
}

// Create and export the route tree

interface AdminRouteRouteChildren {
  AdminAdminOrdersRoute: typeof AdminAdminOrdersRoute
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminAdminOrdersRoute: AdminAdminOrdersRoute,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

interface AuthRouteRouteChildren {
  AuthAccountRoute: typeof AuthAccountRoute
  AuthDesignerRoute: typeof AuthDesignerRoute
  AuthOrdersRoute: typeof AuthOrdersRoute
  AuthDesignerOldOrderIdRoute: typeof AuthDesignerOldOrderIdRoute
  AuthGenerateOrderIdRoute: typeof AuthGenerateOrderIdRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthAccountRoute: AuthAccountRoute,
  AuthDesignerRoute: AuthDesignerRoute,
  AuthOrdersRoute: AuthOrdersRoute,
  AuthDesignerOldOrderIdRoute: AuthDesignerOldOrderIdRoute,
  AuthGenerateOrderIdRoute: AuthGenerateOrderIdRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface OnboardingRouteRouteChildren {
  OnboardingPersonalRoute: typeof OnboardingPersonalRoute
  OnboardingSchuleRoute: typeof OnboardingSchuleRoute
}

const OnboardingRouteRouteChildren: OnboardingRouteRouteChildren = {
  OnboardingPersonalRoute: OnboardingPersonalRoute,
  OnboardingSchuleRoute: OnboardingSchuleRoute,
}

const OnboardingRouteRouteWithChildren = OnboardingRouteRoute._addFileChildren(
  OnboardingRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteRouteWithChildren
  '/onboarding': typeof OnboardingRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/account': typeof AuthAccountRoute
  '/designer': typeof AuthDesignerRoute
  '/orders': typeof AuthOrdersRoute
  '/onboarding/personal': typeof OnboardingPersonalRoute
  '/onboarding/schule': typeof OnboardingSchuleRoute
  '/admin/orders': typeof AdminAdminOrdersRoute
  '/designerOld/$orderId': typeof AuthDesignerOldOrderIdRoute
  '/generate/$orderId': typeof AuthGenerateOrderIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteRouteWithChildren
  '/onboarding': typeof OnboardingRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/account': typeof AuthAccountRoute
  '/designer': typeof AuthDesignerRoute
  '/orders': typeof AuthOrdersRoute
  '/onboarding/personal': typeof OnboardingPersonalRoute
  '/onboarding/schule': typeof OnboardingSchuleRoute
  '/admin/orders': typeof AdminAdminOrdersRoute
  '/designerOld/$orderId': typeof AuthDesignerOldOrderIdRoute
  '/generate/$orderId': typeof AuthGenerateOrderIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_admin': typeof AdminRouteRouteWithChildren
  '/_auth': typeof AuthRouteRouteWithChildren
  '/onboarding': typeof OnboardingRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/_auth/account': typeof AuthAccountRoute
  '/_auth/designer': typeof AuthDesignerRoute
  '/_auth/orders': typeof AuthOrdersRoute
  '/onboarding/personal': typeof OnboardingPersonalRoute
  '/onboarding/schule': typeof OnboardingSchuleRoute
  '/_admin/admin/orders': typeof AdminAdminOrdersRoute
  '/_auth/designerOld/$orderId': typeof AuthDesignerOldOrderIdRoute
  '/_auth/generate/$orderId': typeof AuthGenerateOrderIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/onboarding'
    | '/login'
    | '/account'
    | '/designer'
    | '/orders'
    | '/onboarding/personal'
    | '/onboarding/schule'
    | '/admin/orders'
    | '/designerOld/$orderId'
    | '/generate/$orderId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/onboarding'
    | '/login'
    | '/account'
    | '/designer'
    | '/orders'
    | '/onboarding/personal'
    | '/onboarding/schule'
    | '/admin/orders'
    | '/designerOld/$orderId'
    | '/generate/$orderId'
  id:
    | '__root__'
    | '/'
    | '/_admin'
    | '/_auth'
    | '/onboarding'
    | '/login'
    | '/_auth/account'
    | '/_auth/designer'
    | '/_auth/orders'
    | '/onboarding/personal'
    | '/onboarding/schule'
    | '/_admin/admin/orders'
    | '/_auth/designerOld/$orderId'
    | '/_auth/generate/$orderId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  OnboardingRouteRoute: typeof OnboardingRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRouteRoute: AdminRouteRouteWithChildren,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  OnboardingRouteRoute: OnboardingRouteRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_admin",
        "/_auth",
        "/onboarding",
        "/login"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_admin": {
      "filePath": "_admin/route.tsx",
      "children": [
        "/_admin/admin/orders"
      ]
    },
    "/_auth": {
      "filePath": "_auth/route.tsx",
      "children": [
        "/_auth/account",
        "/_auth/designer",
        "/_auth/orders",
        "/_auth/designerOld/$orderId",
        "/_auth/generate/$orderId"
      ]
    },
    "/onboarding": {
      "filePath": "onboarding/route.tsx",
      "children": [
        "/onboarding/personal",
        "/onboarding/schule"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_auth/account": {
      "filePath": "_auth/account.tsx",
      "parent": "/_auth"
    },
    "/_auth/designer": {
      "filePath": "_auth/designer.tsx",
      "parent": "/_auth"
    },
    "/_auth/orders": {
      "filePath": "_auth/orders.tsx",
      "parent": "/_auth"
    },
    "/onboarding/personal": {
      "filePath": "onboarding/personal.tsx",
      "parent": "/onboarding"
    },
    "/onboarding/schule": {
      "filePath": "onboarding/schule.tsx",
      "parent": "/onboarding"
    },
    "/_admin/admin/orders": {
      "filePath": "_admin/admin.orders.tsx",
      "parent": "/_admin"
    },
    "/_auth/designerOld/$orderId": {
      "filePath": "_auth/designerOld.$orderId.tsx",
      "parent": "/_auth"
    },
    "/_auth/generate/$orderId": {
      "filePath": "_auth/generate.$orderId.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
